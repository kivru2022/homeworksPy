from cmath import sqrt
#1. Напишите программу, которая на вхлд принимает цифру, обозначающую день недели, и проверяет,
#является ли этот день выходным.
# print("Введите число")
# a = input()
# if a == 6 or a == 7:
#     print("Это выходной")
# else:
#     print("Увы, это не выходной")
    
    
#2. Напишите программу для. проверки истинности утверждения 
# ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
    # ⋁ - логическое или (or) , ⋀ - логическое и (and)
    # не(0 + 1 +1) = не 0* не 1 * не 1 ; не 1  = 0 -> 0 =0 , истина 
    
# x = 0
# y = 1
# z = 1

# print (not( x or y or z ) == (not x and not y and not z))
 



# 3.Напишите программу, которая принимает на вход координаты точки (X и Y), причём X ≠ 0 и Y ≠ 0 
# и выдаёт номер четверти плоскости, в которой находится эта точка (или на какой оси она находится)

# print('Введите координаты точки')
# x = int(input('Координата по ОХ'))
# y = int(input('Координата по ОY'))

# if x > 0 and y > 0:
#     print('1 четверть')
# elif x > 0 & y < 0:
#     print('4 четверть')
# elif x < 0 & y < 0:
#     print('2 четверть')
# elif x < 0 & y < 0:
#     print('3 четверть')


# 4. Напишите программу, которая по заданному номеру четверти, показывает диапазон возможных координат точек 
# в этой четверти (x и y).
# print('Введите номер четверти от 1 до 4')
# quatrer = int(input('Номер четверти: '))

# if quatrer < 1 or quatrer > 4:
#     print('Нет такой четверти')
# elif quatrer == 1:
#     print('Координаты точки будут (x, y)')
# elif quatrer == 2:
#     print('Координаты точки будут (-x, y)')
# elif quatrer == 3:
#     print('Координаты точки будут (-x, -y)')
# elif quatrer == 4:
#     print('Координаты точки будут (x, -y)')

# 5.Напишите программу, которая принимает на вход координаты двух точек и находит расстояние между ними 
# в 2D пространстве.


# print('Введите координаты точки А')
# x = int(input())
# y = int(input())
# print('Введите координаты точки В')
# x1 = int(input())
# y1 = int(input())

# d = sqrt(pow(x1 - x, 2) + pow(y1 - y, 2))
# print(f'Расстояние между данными точками: {d}')
